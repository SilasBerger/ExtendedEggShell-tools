<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001471">
<title confidence="0.879303">
Workshop on Program Comprehension through Dynamic Analysis (PCODA’08)
</title>
<author confidence="0.986797">
Andy Zaidman
</author>
<affiliation confidence="0.814589">
Delft University of Technology
The Netherlands
</affiliation>
<email confidence="0.9645">
a.e.zaidman@tudelft.nl
</email>
<author confidence="0.735828">
Abdelwahab Hamou-Lhadj
</author>
<affiliation confidence="0.994174">
Concordia University
</affiliation>
<address confidence="0.777743">
Montreal, Quebec, Canada
</address>
<email confidence="0.862924">
abdelw@ece.concordia.ca
</email>
<figure confidence="0.6672176">
Orla Greevy
sw-eng Software Engineering GmbH
Switzerland
greevy@sw-eng.ch
David Röthlisberger
</figure>
<affiliation confidence="0.582059">
University of Bern
Switzerland
</affiliation>
<email confidence="0.914308">
roethlis@iam.unibe.ch
</email>
<sectionHeader confidence="0.981926" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9994425">
Applying program comprehension techniques may ren-
der software maintenance and evolution easier. Under-
standing a software system typically requires a combination
of static and dynamic analysis techniques. The aim of this
workshop is to bring together researchers and practition-
ers working in the area of program comprehension with an
emphasis on dynamic analysis. We are interested in inves-
tigating how dynamic analysis techniques are used or can
be used to enable better comprehension of a software sys-
tem. The objective is to compare existing techniques, iden-
tify common case studies and possible symbioses for exist-
ing solutions. Building upon three previous editions of the
workshop, we aim to set up a forum for exchanging experi-
ences, discussing solutions, and exploring new ideas.
</bodyText>
<sectionHeader confidence="0.997382" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.992708666666667">
Without consistent or adequately complete documenta-
tion, maintainers are faced with the inevitable problem of
understanding how the system is implemented prior to un-
dertaking any maintenance task. Research into the disci-
pline of program comprehension aims to reduce the impact
of this problem.
Studies have shown that software engineers tend to spend
up to 50% of their time trying to comprehend the structure
of a software system [1]. This has led to the development
of several program comprehension models and techniques
such as those presented by Storey et al. [2].
PCODA focuses on program comprehension techniques
that rely specifically on dynamic analysis. As such, this
workshop builds on previous experiences from existing
workshops and conferences such as IWPC/ICPC (Interna-
tional Workshop/Conference on Program Comprehension),
which tends to focus on static analysis techniques leaving
out dynamic analysis, and WODA (Workshop on Dynamic
Analysis), which focuses on forward engineering rather
than to the challenges of reverse engineering.
The three previous editions of PCODA which were held
in conjunction with the Working Conference on Reverse En-
gineering (WCRE) in respectively Pittsburgh (2005), Ben-
evento (2006) and Vancouver (2007), showed that there cer-
tainly is an active interest in the topic of program compre-
hension supported by dynamic analysis. In 2005 we re-
ceived 13 high-quality paper submissions of which 11 were
accepted, for 2006 we had 11 high-quality submissions of
which 8 were accepted and in 2007 we had 12 submissions
of which we accepted 8. Each paper was reviewed by at
least 2 members of the program committee. Additionally,
the format of the workshop, where one presenter summa-
rizes a number of papers from the participants, has proven
successful in enabling a good mix of presentations and dis-
cussion.
In 2007 we also edited a special issue on the topic of
program comprehension through dynamic analysis, which
has since appeared in the July/August 2008 issue of
Wiley’s Journal of Software Maintenance and Evolution
(JSME) [3]. For this special issue we received 12 submis-
sions from which 4 high quality papers will be published in
JSME.
</bodyText>
<sectionHeader confidence="0.968508" genericHeader="introduction">
2 Topics
</sectionHeader>
<bodyText confidence="0.916103">
The main theme for this workshop is program compre-
hension through dynamic analysis. Topics of interest in-
clude, but are not restricted to:
</bodyText>
<table confidence="0.860075">
2008 15th Working Conference on Reverse Engineering
1095-1350/08 $25.00 © 2008 IEEE
DOI 10.1109/WCRE.2008.21
</table>
<page confidence="0.910757">
345
</page>
<bodyText confidence="0.491126">
Authorized licensed use limited to: Oscar Nierstrasz. Downloaded on June 4, 2009 at 09:51 from IEEE Xplore. Restrictions apply.
</bodyText>
<listItem confidence="0.997446074074074">
• Program comprehension models:
– Theories and models for software comprehension
based on dynamic analysis
– Program comprehension processes and strategies
involving dynamic analysis techniques
– Research methodologies
• Techniques and tools:
– Applications of dynamic analysis techniques to
program comprehension
– Strengths and limitations of existing techniques
– Trace analysis and exploration techniques
– Techniques for reducing the large size of run-
time information
– Hybrid analyses that involve both static and dy-
namic analysis
– Dynamic analysis tools with an emphasis on pro-
gram comprehension
– Comparisons between existing tools and ap-
proaches
– Dynamic analysis in the context of distributed
systems and webservices (or service oriented ar-
chitectures)
• Evaluation Techniques:
– Criteria for evaluating techniques
– Experiments and case studies with a focus on
program comprehension using dynamic analysis
– Empirical effectiveness studies
</listItem>
<sectionHeader confidence="0.754955" genericHeader="method">
3 Target audience
</sectionHeader>
<bodyText confidence="0.993731833333333">
The workshop is intended for software engineering pro-
fessionals from industry and academia with an interest in
program comprehension and reverse engineering through
dynamic analysis; people who are actively engaged in
reengineering projects, or who develop or research method-
ologies and tools.
</bodyText>
<sectionHeader confidence="0.995416" genericHeader="method">
4 Goals
</sectionHeader>
<bodyText confidence="0.9782825">
We have a number of goals for each of the prospective
participants:
</bodyText>
<listItem confidence="0.999536666666667">
• Bring forward innovative techniques in the field
• Introduce comprehension strategies based on dynamic
analysis that have proven themselves in the field
• Share results of case studies and experiments – find
common case studies
• Compare various techniques
• Discuss how to perform empirical studies to validate
the results
• Inventorize dynamic analysis techniques (with an em-
</listItem>
<bodyText confidence="0.553054">
phasis on program comprehension) used in research.
</bodyText>
<sectionHeader confidence="0.972978" genericHeader="method">
5 Workshop format
</sectionHeader>
<bodyText confidence="0.999063411764706">
Preparation. To make efficient use of the workshop time,
we pay special attention to its preparation. We request from
each participant to submit a (position) paper in advance.
Participants are encouraged to read all accepted material,
so that the workshop can be discussion-oriented rather than
presentation-oriented.
Workshop structure. Each participant will briefly intro-
duce himself/herself. Then a brief summary of all papers
will be given. Papers will be grouped according to topic
and one presenter, the “topic leader” who is designated in
advance, will present all summaries of papers in one topic.
The workshop will be 1/2 day, discussion-oriented. After-
wards, each participant will be asked to formulate a short
summary of the workshop (maximum 250 words), high-
lighting points of interest of his or her research. We will
post the summaries on the PCODA website, so that poten-
tial collaborations will be made visible.
</bodyText>
<sectionHeader confidence="0.988932" genericHeader="conclusions">
6 Workshop proceedings
</sectionHeader>
<bodyText confidence="0.941272">
The workshop proceedings will be available to
attendees of PCODA’08 and will also be avail-
able for download from the workshop website
(http://swerl.tudelft.nl/bin/view/PCODA/PCODA2008).
</bodyText>
<sectionHeader confidence="0.964238" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.992727636363636">
[1] T. Corbi. Program understanding: Challenge for the 1990s.
IBM Systems Journal, 28(2):294–306, 1989.
[2] M.-A. D. Storey, K. Wong, and H. A. Müller. How do pro-
gram understanding tools affect how programmers understand
programs? In Proceedings of the 4th Working Conference on
Reverse Engineering (WCRE), pages 183–207. IEEE Com-
puter Society, 1997.
[3] A. Zaidman, A. Hamou-Lhadj, and O. Greevy. Introduction
to the special issue on program comprehension through dy-
namic analysis (PCODA). Journal of Software Maintenance
and Evolution: Research and Practice, 20(4):223–225, 2008.
</reference>
<page confidence="0.997596">
346
</page>
<bodyText confidence="0.730421">
Authorized licensed use limited to: Oscar Nierstrasz. Downloaded on June 4, 2009 at 09:51 from IEEE Xplore. Restrictions apply.
</bodyText>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.159233">
<title confidence="0.697897">Workshop on Program Comprehension through Dynamic Analysis (PCODA’08)</title>
<author confidence="0.999429">Andy Zaidman</author>
<affiliation confidence="0.999976">Delft University of Technology</affiliation>
<address confidence="0.991372">The Netherlands</address>
<email confidence="0.994345">a.e.zaidman@tudelft.nl</email>
<author confidence="0.863906">Abdelwahab Hamou-Lhadj</author>
<affiliation confidence="0.999989">Concordia University</affiliation>
<address confidence="0.999763">Montreal, Quebec, Canada</address>
<email confidence="0.991357">abdelw@ece.concordia.ca</email>
<affiliation confidence="0.8045515">Orla Greevy sw-eng Software Engineering GmbH</affiliation>
<address confidence="0.668488">Switzerland</address>
<email confidence="0.933445">greevy@sw-eng.ch</email>
<author confidence="0.999663">David Röthlisberger</author>
<affiliation confidence="0.999977">University of Bern</affiliation>
<address confidence="0.740273">Switzerland</address>
<email confidence="0.982678">roethlis@iam.unibe.ch</email>
<abstract confidence="0.995990066666667">Applying program comprehension techniques may render software maintenance and evolution easier. Understanding a software system typically requires a combination of static and dynamic analysis techniques. The aim of this workshop is to bring together researchers and practitioners working in the area of program comprehension with an emphasis on dynamic analysis. We are interested in investigating how dynamic analysis techniques are used or can be used to enable better comprehension of a software system. The objective is to compare existing techniques, identify common case studies and possible symbioses for existing solutions. Building upon three previous editions of the workshop, we aim to set up a forum for exchanging experiences, discussing solutions, and exploring new ideas.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T Corbi</author>
</authors>
<title>Program understanding: Challenge for the 1990s.</title>
<date>1989</date>
<journal>IBM Systems Journal,</journal>
<volume>28</volume>
<issue>2</issue>
<contexts>
<context position="1639" citStr="[1]" startWordPosition="233" endWordPosition="233">uilding upon three previous editions of the workshop, we aim to set up a forum for exchanging experiences, discussing solutions, and exploring new ideas. 1 Introduction Without consistent or adequately complete documentation, maintainers are faced with the inevitable problem of understanding how the system is implemented prior to undertaking any maintenance task. Research into the discipline of program comprehension aims to reduce the impact of this problem. Studies have shown that software engineers tend to spend up to 50% of their time trying to comprehend the structure of a software system [1]. This has led to the development of several program comprehension models and techniques such as those presented by Storey et al. [2]. PCODA focuses on program comprehension techniques that rely specifically on dynamic analysis. As such, this workshop builds on previous experiences from existing workshops and conferences such as IWPC/ICPC (International Workshop/Conference on Program Comprehension), which tends to focus on static analysis techniques leaving out dynamic analysis, and WODA (Workshop on Dynamic Analysis), which focuses on forward engineering rather than to the challenges of rever</context>
</contexts>
<marker>[1]</marker>
<rawString>T. Corbi. Program understanding: Challenge for the 1990s. IBM Systems Journal, 28(2):294–306, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M-A D Storey</author>
<author>K Wong</author>
<author>H A Muller</author>
</authors>
<title>How do program understanding tools affect how programmers understand programs?</title>
<date>1997</date>
<booktitle>In Proceedings of the 4th Working Conference on Reverse Engineering (WCRE),</booktitle>
<pages>183--207</pages>
<publisher>IEEE Computer Society,</publisher>
<contexts>
<context position="1772" citStr="[2]" startWordPosition="255" endWordPosition="255">exploring new ideas. 1 Introduction Without consistent or adequately complete documentation, maintainers are faced with the inevitable problem of understanding how the system is implemented prior to undertaking any maintenance task. Research into the discipline of program comprehension aims to reduce the impact of this problem. Studies have shown that software engineers tend to spend up to 50% of their time trying to comprehend the structure of a software system [1]. This has led to the development of several program comprehension models and techniques such as those presented by Storey et al. [2]. PCODA focuses on program comprehension techniques that rely specifically on dynamic analysis. As such, this workshop builds on previous experiences from existing workshops and conferences such as IWPC/ICPC (International Workshop/Conference on Program Comprehension), which tends to focus on static analysis techniques leaving out dynamic analysis, and WODA (Workshop on Dynamic Analysis), which focuses on forward engineering rather than to the challenges of reverse engineering. The three previous editions of PCODA which were held in conjunction with the Working Conference on Reverse Engineerin</context>
</contexts>
<marker>[2]</marker>
<rawString>M.-A. D. Storey, K. Wong, and H. A. Müller. How do program understanding tools affect how programmers understand programs? In Proceedings of the 4th Working Conference on Reverse Engineering (WCRE), pages 183–207. IEEE Computer Society, 1997.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Zaidman</author>
<author>A Hamou-Lhadj</author>
<author>O Greevy</author>
</authors>
<title>Introduction to the special issue on program comprehension through dynamic analysis (PCODA).</title>
<date>2008</date>
<journal>Journal of Software Maintenance and Evolution: Research and Practice,</journal>
<volume>20</volume>
<issue>4</issue>
<contexts>
<context position="3272" citStr="[3]" startWordPosition="488" endWordPosition="488">d 11 high-quality submissions of which 8 were accepted and in 2007 we had 12 submissions of which we accepted 8. Each paper was reviewed by at least 2 members of the program committee. Additionally, the format of the workshop, where one presenter summarizes a number of papers from the participants, has proven successful in enabling a good mix of presentations and discussion. In 2007 we also edited a special issue on the topic of program comprehension through dynamic analysis, which has since appeared in the July/August 2008 issue of Wiley’s Journal of Software Maintenance and Evolution (JSME) [3]. For this special issue we received 12 submissions from which 4 high quality papers will be published in JSME. 2 Topics The main theme for this workshop is program comprehension through dynamic analysis. Topics of interest include, but are not restricted to: 2008 15th Working Conference on Reverse Engineering 1095-1350/08 $25.00 © 2008 IEEE DOI 10.1109/WCRE.2008.21 345 Authorized licensed use limited to: Oscar Nierstrasz. Downloaded on June 4, 2009 at 09:51 from IEEE Xplore. Restrictions apply. • Program comprehension models: – Theories and models for software comprehension based on dynamic a</context>
</contexts>
<marker>[3]</marker>
<rawString>A. Zaidman, A. Hamou-Lhadj, and O. Greevy. Introduction to the special issue on program comprehension through dynamic analysis (PCODA). Journal of Software Maintenance and Evolution: Research and Practice, 20(4):223–225, 2008.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>