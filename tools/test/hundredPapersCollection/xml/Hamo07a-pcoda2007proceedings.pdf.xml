<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.012355">
<title confidence="0.79551">
Workshop on Program Comprehension through Dynamic Analysis (PCODA’07)
</title>
<author confidence="0.855803">
Abdelwahab Hamou-Lhadj
</author>
<affiliation confidence="0.998034">
Concordia University
</affiliation>
<address confidence="0.793933">
Montreal, Quebec, Canada
</address>
<email confidence="0.987919">
abdelw@ece.concordia.ca
</email>
<author confidence="0.986106">
Andy Zaidman
</author>
<affiliation confidence="0.8124445">
Delft University of Technology
The Netherlands
</affiliation>
<email confidence="0.951046">
a.e.zaidman@tudelft.nl
</email>
<author confidence="0.591054">
Orla Greevy
</author>
<affiliation confidence="0.703524">
University of Bern
Switzerland
</affiliation>
<email confidence="0.969392">
greevy@iam.unibe.ch
</email>
<sectionHeader confidence="0.988205" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.998569142857143">
Software maintenance and evolution can be made eas-
ier if program comprehension techniques are used. Un-
derstanding a software system would typically necessitate
a combination of static and dynamic analysis techniques.
The aim of this workshop is to gather together researchers
working in the area of program comprehension with an em-
phasis on dynamic analysis. We are interested in investi-
gating how dynamic analysis techniques are used or can be
used to enable better comprehension of a software system.
The objective is to find common case studies, compare ex-
isting techniques, and find possible symbioses for existing
solutions. Building upon the two previous editions of the
workshop, we aim to set up a forum for exchanging experi-
ences, discussing solutions, and exploring new ideas.
</bodyText>
<sectionHeader confidence="0.997382" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9972830625">
Without consistent or adequately complete documenta-
tion, maintainers are faced with the inevitable problem of
understanding how the system is implemented prior to un-
dertaking any maintenance task. Research into the disci-
pline of program comprehension aims to reduce the impact
of this problem.
Studies have shown that software engineers tend to spend
up to 50% of their time trying to comprehend the structure
of a software system [1]. This has led to the development
of several program comprehension models and techniques
such as those presented by Storey et al. [3].
PCODA focuses on program comprehension techniques
that rely specifically on dynamic analysis. As such, this
workshop builds on previous experiences from existing
workshops and conferences such as IWPC/ICPC (Interna-
tional Workshop/Conference on Program Comprehension),
which tends to focus on static analysis techniques leaving
out dynamic analysis, and WODA (Workshop on Dynamic
Analysis), which focuses on forward engineering rather
than the challenges of reverse engineering.
The two previous editions of PCODA which were held
in conjunction with theWorking Conference on Reverse En-
gineering (WCRE) in Pittsburgh [2] and Benevento [4] re-
spectively, showed that there certainly is an interest in the
topic of program comprehension aided by dynamic analy-
sis. In 2005 we received 13 high-quality paper submissions
of which 11 were accepted, and for 2006 we had 11 high-
quality submissions of which 8 were accepted. Addition-
ally, we want to note that the format we used where one pre-
senter summarizes a number of papers from the participants
was very successful in enabling a good mix of presentations
and discussion.
</bodyText>
<sectionHeader confidence="0.99057" genericHeader="introduction">
2 Topics
</sectionHeader>
<bodyText confidence="0.872994333333333">
The main theme for this workshop is program compre-
hension through dynamic analysis. Topics of interest in-
clude, but are not restricted to:
</bodyText>
<listItem confidence="0.998247259259259">
• Program comprehension models:
– Theories and models for software comprehension
based on dynamic analysis
– Program comprehension processes and strategies
involving dynamic analysis techniques
– Research methodologies
• Techniques and tools:
– Applications of dynamic analysis techniques to
program comprehension
– Strengths and limitations of existing techniques
– Trace analysis and exploration techniques
– Techniques for reducing the large size of run-
time information
– Hybrid analyses that involve both static and dy-
namic analysis
– Dynamic analysis tools with an emphasis on pro-
gram comprehension
– Comparisons between existing tools and ap-
proaches
– Dynamic analysis in the context of distributed
systems and webservices (or service oriented ar-
chitectures)
• Evaluation Techniques:
– Criteria for evaluating techniques
– Experiments and case studies with a focus on
program comprehension using dynamic analysis
– Empirical effectiveness studies
</listItem>
<sectionHeader confidence="0.680156" genericHeader="method">
3 Target audience
</sectionHeader>
<bodyText confidence="0.9940925">
The workshop is intended for software engineering pro-
fessionals from industry and academia with an interest in
program comprehension and reverse engineering through
dynamic analysis; either people who are actively engaged in
reengineering projects, or people who develop or research
methodologies and tools.
</bodyText>
<sectionHeader confidence="0.962083" genericHeader="method">
4 Goals
</sectionHeader>
<bodyText confidence="0.750738">
For each of the prospective participants we have a num-
ber of goals:
</bodyText>
<listItem confidence="0.987437769230769">
• Bring forward innovative techniques in the field
• Introduce comprehension strategies based on dynamic
analysis that have proven themselves in the field
• Share results of case studies and experiments
• Find common case studies
• Compare various techniques
• Discuss how to perform empirical studies to validate
your results
• Be part of a research network of reverse engineers
working with dynamic analysis
• Establish collaborations
• Get feedback on your research ideas
5 Journal special issue
</listItem>
<bodyText confidence="0.986147">
The Journal of Software Maintenance and Evolution:
Research and Practice (JSME) published by Wiley has ac-
cepted to publish a special issue on the PCODA topic. The
authors of the best papers from PCODA 2007 will be in-
vited to submit an extended version for the special issue.
This special issue is also open for non-PCODA2007 papers
that are on topic. The special issue is scheduled for publica-
tion in September 2008. Deadline for submission is toward
the end of December 2007.
</bodyText>
<sectionHeader confidence="0.907639" genericHeader="method">
6 Workshop format
</sectionHeader>
<subsectionHeader confidence="0.986527">
6.1 Preparation
</subsectionHeader>
<bodyText confidence="0.988504833333333">
In order to make efficient use of the day, we want to pay
special attention to the preparation of the workshop. We re-
quest from each participant to submit a (position) paper in
advance. Participants are encouraged to read all accepted
material, so that the workshop itself can be discussion-
oriented instead of presentation-oriented.
</bodyText>
<subsectionHeader confidence="0.997824">
6.2 Workshop structure
</subsectionHeader>
<bodyText confidence="0.9987844">
Each participant will briefly introduce himself/herself.
After that, a quick summary of all papers will be given.
This is done by grouping the papers according to topic. The
summary is given by the “topic leader” who is preselected
up front and specializes himself/herself in the papers.
The workshop will be 1/2 day, discussion-oriented.
At the end of the workshop, each participant is asked
whether his/her goals for the workshop were met and
we also discuss possible improvements for future PCODA
workshops.
</bodyText>
<sectionHeader confidence="0.967783" genericHeader="conclusions">
7 Workshop proceedings
</sectionHeader>
<bodyText confidence="0.96909175">
The workshop proceedings will be available to
attendees of PCODA’07 and will also be avail-
able for download from the workshop website
(http://swerl.tudelft.nl/bin/view/Main/PCODA2007).
</bodyText>
<sectionHeader confidence="0.977624" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999561588235294">
[1] T. Corbi. Program understanding: Challenge for the 1990s.
IBM Systems Journal, 28(2):294–306, 1989.
[2] O. Greevy, A. Hamou-Lhadj, and A. Zaidman. Work-
shop on Program Comprehension through Dynamic Analysis
(PCODA’05). In Proceedings of the 12th Working Conference
on Reverse Engineering (WCRE), page 232. IEEE Computer
Society, 2005.
[3] M.-A. D. Storey, K. Wong, and H. A. Müller. How do pro-
gram understanding tools affect how programmers understand
programs? In Proceedings of the 4th Working Conference on
Reverse Engineering (WCRE), pages 183–207. IEEE Com-
puter Society, 1997.
[4] A. Zaidman, O. Greevy, and A. Hamou-Lhadj. Work-
shop on program comprehension through dynamic analysis
(PCODA’06). In Proceedings of the 13th Working Conference
on Reverse Engineering (WCRE), page 315. IEEE Computer
Society, 2006.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.335844">
<title confidence="0.667397">Workshop on Program Comprehension through Dynamic Analysis (PCODA’07)</title>
<author confidence="0.850778">Abdelwahab Hamou-Lhadj</author>
<affiliation confidence="0.999974">Concordia University</affiliation>
<address confidence="0.99978">Montreal, Quebec, Canada</address>
<email confidence="0.991081">abdelw@ece.concordia.ca</email>
<author confidence="0.999685">Andy Zaidman</author>
<affiliation confidence="0.999977">Delft University of Technology</affiliation>
<address confidence="0.991387">The Netherlands</address>
<email confidence="0.993955">a.e.zaidman@tudelft.nl</email>
<affiliation confidence="0.9015215">Orla Greevy University of Bern</affiliation>
<address confidence="0.74708">Switzerland</address>
<email confidence="0.984572">greevy@iam.unibe.ch</email>
<abstract confidence="0.995952266666667">Software maintenance and evolution can be made easier if program comprehension techniques are used. Understanding a software system would typically necessitate a combination of static and dynamic analysis techniques. The aim of this workshop is to gather together researchers working in the area of program comprehension with an emphasis on dynamic analysis. We are interested in investigating how dynamic analysis techniques are used or can be used to enable better comprehension of a software system. The objective is to find common case studies, compare existing techniques, and find possible symbioses for existing solutions. Building upon the two previous editions of the workshop, we aim to set up a forum for exchanging experiences, discussing solutions, and exploring new ideas.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T Corbi</author>
</authors>
<title>Program understanding: Challenge for the 1990s.</title>
<date>1989</date>
<journal>IBM Systems Journal,</journal>
<volume>28</volume>
<issue>2</issue>
<contexts>
<context position="1554" citStr="[1]" startWordPosition="227" endWordPosition="227">lding upon the two previous editions of the workshop, we aim to set up a forum for exchanging experiences, discussing solutions, and exploring new ideas. 1 Introduction Without consistent or adequately complete documentation, maintainers are faced with the inevitable problem of understanding how the system is implemented prior to undertaking any maintenance task. Research into the discipline of program comprehension aims to reduce the impact of this problem. Studies have shown that software engineers tend to spend up to 50% of their time trying to comprehend the structure of a software system [1]. This has led to the development of several program comprehension models and techniques such as those presented by Storey et al. [3]. PCODA focuses on program comprehension techniques that rely specifically on dynamic analysis. As such, this workshop builds on previous experiences from existing workshops and conferences such as IWPC/ICPC (International Workshop/Conference on Program Comprehension), which tends to focus on static analysis techniques leaving out dynamic analysis, and WODA (Workshop on Dynamic Analysis), which focuses on forward engineering rather than the challenges of reverse </context>
</contexts>
<marker>[1]</marker>
<rawString>T. Corbi. Program understanding: Challenge for the 1990s. IBM Systems Journal, 28(2):294–306, 1989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Greevy</author>
<author>A Hamou-Lhadj</author>
<author>A Zaidman</author>
</authors>
<title>Workshop on Program Comprehension through Dynamic Analysis (PCODA’05).</title>
<date>2005</date>
<booktitle>In Proceedings of the 12th Working Conference on Reverse Engineering (WCRE),</booktitle>
<pages>232</pages>
<publisher>IEEE Computer Society,</publisher>
<contexts>
<context position="2307" citStr="[2]" startWordPosition="335" endWordPosition="335">n program comprehension techniques that rely specifically on dynamic analysis. As such, this workshop builds on previous experiences from existing workshops and conferences such as IWPC/ICPC (International Workshop/Conference on Program Comprehension), which tends to focus on static analysis techniques leaving out dynamic analysis, and WODA (Workshop on Dynamic Analysis), which focuses on forward engineering rather than the challenges of reverse engineering. The two previous editions of PCODA which were held in conjunction with theWorking Conference on Reverse Engineering (WCRE) in Pittsburgh [2] and Benevento [4] respectively, showed that there certainly is an interest in the topic of program comprehension aided by dynamic analysis. In 2005 we received 13 high-quality paper submissions of which 11 were accepted, and for 2006 we had 11 highquality submissions of which 8 were accepted. Additionally, we want to note that the format we used where one presenter summarizes a number of papers from the participants was very successful in enabling a good mix of presentations and discussion. 2 Topics The main theme for this workshop is program comprehension through dynamic analysis. Topics of </context>
</contexts>
<marker>[2]</marker>
<rawString>O. Greevy, A. Hamou-Lhadj, and A. Zaidman. Workshop on Program Comprehension through Dynamic Analysis (PCODA’05). In Proceedings of the 12th Working Conference on Reverse Engineering (WCRE), page 232. IEEE Computer Society, 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M-A D Storey</author>
<author>K Wong</author>
<author>H A Muller</author>
</authors>
<title>How do program understanding tools affect how programmers understand programs?</title>
<date>1997</date>
<booktitle>In Proceedings of the 4th Working Conference on Reverse Engineering (WCRE),</booktitle>
<pages>183--207</pages>
<publisher>IEEE Computer Society,</publisher>
<contexts>
<context position="1687" citStr="[3]" startWordPosition="249" endWordPosition="249">exploring new ideas. 1 Introduction Without consistent or adequately complete documentation, maintainers are faced with the inevitable problem of understanding how the system is implemented prior to undertaking any maintenance task. Research into the discipline of program comprehension aims to reduce the impact of this problem. Studies have shown that software engineers tend to spend up to 50% of their time trying to comprehend the structure of a software system [1]. This has led to the development of several program comprehension models and techniques such as those presented by Storey et al. [3]. PCODA focuses on program comprehension techniques that rely specifically on dynamic analysis. As such, this workshop builds on previous experiences from existing workshops and conferences such as IWPC/ICPC (International Workshop/Conference on Program Comprehension), which tends to focus on static analysis techniques leaving out dynamic analysis, and WODA (Workshop on Dynamic Analysis), which focuses on forward engineering rather than the challenges of reverse engineering. The two previous editions of PCODA which were held in conjunction with theWorking Conference on Reverse Engineering (WCR</context>
</contexts>
<marker>[3]</marker>
<rawString>M.-A. D. Storey, K. Wong, and H. A. Müller. How do program understanding tools affect how programmers understand programs? In Proceedings of the 4th Working Conference on Reverse Engineering (WCRE), pages 183–207. IEEE Computer Society, 1997.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Zaidman</author>
<author>O Greevy</author>
<author>A Hamou-Lhadj</author>
</authors>
<title>Workshop on program comprehension through dynamic analysis (PCODA’06).</title>
<date>2006</date>
<booktitle>In Proceedings of the 13th Working Conference on Reverse Engineering (WCRE),</booktitle>
<pages>315</pages>
<publisher>IEEE Computer Society,</publisher>
<contexts>
<context position="2325" citStr="[4]" startWordPosition="338" endWordPosition="338">nsion techniques that rely specifically on dynamic analysis. As such, this workshop builds on previous experiences from existing workshops and conferences such as IWPC/ICPC (International Workshop/Conference on Program Comprehension), which tends to focus on static analysis techniques leaving out dynamic analysis, and WODA (Workshop on Dynamic Analysis), which focuses on forward engineering rather than the challenges of reverse engineering. The two previous editions of PCODA which were held in conjunction with theWorking Conference on Reverse Engineering (WCRE) in Pittsburgh [2] and Benevento [4] respectively, showed that there certainly is an interest in the topic of program comprehension aided by dynamic analysis. In 2005 we received 13 high-quality paper submissions of which 11 were accepted, and for 2006 we had 11 highquality submissions of which 8 were accepted. Additionally, we want to note that the format we used where one presenter summarizes a number of papers from the participants was very successful in enabling a good mix of presentations and discussion. 2 Topics The main theme for this workshop is program comprehension through dynamic analysis. Topics of interest include, </context>
</contexts>
<marker>[4]</marker>
<rawString>A. Zaidman, O. Greevy, and A. Hamou-Lhadj. Workshop on program comprehension through dynamic analysis (PCODA’06). In Proceedings of the 13th Working Conference on Reverse Engineering (WCRE), page 315. IEEE Computer Society, 2006.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>